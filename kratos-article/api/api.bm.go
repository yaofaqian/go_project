// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/go-kratos/kratos/pkg/net/http/blademaster"
	"github.com/go-kratos/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "google.golang.org/protobuf/types/known/emptypb"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathArticlePing = "/article.service.v1.Article/Ping"
var PathArticleArticleDetail = "/article.service.v1.Article/ArticleDetail"

// ArticleBMServer is the server API for Article service.
type ArticleBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	ArticleDetail(ctx context.Context, req *ArticleReq) (resp *ArticleResp, err error)
}

var ArticleSvc ArticleBMServer

func articlePing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := ArticleSvc.Ping(c, p)
	c.JSON(resp, err)
}

func articleArticleDetail(c *bm.Context) {
	p := new(ArticleReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := ArticleSvc.ArticleDetail(c, p)
	c.JSON(resp, err)
}

// RegisterArticleBMServer Register the blademaster route
func RegisterArticleBMServer(e *bm.Engine, server ArticleBMServer) {
	ArticleSvc = server
	e.GET("/article.service.v1.Article/Ping", articlePing)
	e.GET("/article.service.v1.Article/ArticleDetail", articleArticleDetail)
}
